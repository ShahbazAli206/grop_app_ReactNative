{"ast":null,"code":"import React from \"react\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport Profile from \"./Profile\";\nimport Chat from \"./Chat\";\nimport Res_Dashboard from \"./Res_Dashboard\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Tab = createBottomTabNavigator();\nvar BottomTabNavigator = function BottomTabNavigator() {\n  return _jsxs(Tab.Navigator, {\n    screenOptions: function screenOptions(_ref) {\n      var route = _ref.route;\n      return {\n        headerShown: false,\n        tabBarIcon: function tabBarIcon(_ref2) {\n          var focused = _ref2.focused,\n            color = _ref2.color,\n            size = _ref2.size;\n          if (route.name === \"Home\") {\n            return _jsx(Ionicons, {\n              name: focused ? \"ios-home\" : \"ios-home-outline\",\n              size: size,\n              color: color\n            });\n          } else if (route.name === \"Chat\") {\n            return _jsx(Ionicons, {\n              name: focused ? \"ios-chatbubble-ellipses\" : \"ios-chatbubble-ellipses-outline\",\n              size: size,\n              color: color\n            });\n          } else if (route.name === \"Profile\") {\n            return _jsx(Ionicons, {\n              name: focused ? \"ios-person-circle\" : \"ios-person-circle-outline\",\n              size: size,\n              color: color\n            });\n          }\n        },\n        tabBarInactiveTintColor: \"gray\",\n        tabBarActiveTintColor: \"tomato\"\n      };\n    },\n    children: [_jsx(Tab.Screen, {\n      name: \"Home\",\n      component: Res_Dashboard\n    }), _jsx(Tab.Screen, {\n      name: \"Chat\",\n      options: {\n        tabBarBadge: 3\n      },\n      component: Chat\n    }), _jsx(Tab.Screen, {\n      name: \"Profile\",\n      component: Profile\n    })]\n  });\n};\nexport default BottomTabNavigator;","map":{"version":3,"names":["React","createBottomTabNavigator","Ionicons","Profile","Chat","Res_Dashboard","jsx","_jsx","jsxs","_jsxs","Tab","BottomTabNavigator","Navigator","screenOptions","_ref","route","headerShown","tabBarIcon","_ref2","focused","color","size","name","tabBarInactiveTintColor","tabBarActiveTintColor","children","Screen","component","options","tabBarBadge"],"sources":["D:/FYP/Projects/App_Projects/React Native Expo Cli Projects/gharbar_app/src/screens/Resident_Screens/TabNavigator.js"],"sourcesContent":["import React from \"react\";\r\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\r\nimport { Ionicons } from \"@expo/vector-icons\";\r\nimport Profile from \"./Profile\";\r\nimport Chat from \"./Chat\";\r\nimport Res_Dashboard from \"./Res_Dashboard\";\r\n\r\nconst Tab = createBottomTabNavigator();\r\n\r\nconst BottomTabNavigator = () => {\r\n  return (\r\n    <Tab.Navigator\r\n      screenOptions={({ route }) => ({\r\n        headerShown: false,\r\n        tabBarIcon: ({ focused, color, size }) => {\r\n          if (route.name === \"Home\") {\r\n            return (\r\n              <Ionicons\r\n                name={focused ? \"ios-home\" : \"ios-home-outline\"}\r\n                size={size}\r\n                color={color}\r\n              />\r\n            );\r\n          } else if (route.name === \"Chat\") {\r\n            return (\r\n              <Ionicons\r\n                name={\r\n                  focused\r\n                    ? \"ios-chatbubble-ellipses\"\r\n                    : \"ios-chatbubble-ellipses-outline\"\r\n                }\r\n                size={size}\r\n                color={color}\r\n              />\r\n            );\r\n          } else if (route.name === \"Profile\") {\r\n            return (\r\n              <Ionicons\r\n                name={\r\n                  focused ? \"ios-person-circle\" : \"ios-person-circle-outline\"\r\n                }\r\n                size={size}\r\n                color={color}\r\n              />\r\n            );\r\n          }\r\n        },\r\n        tabBarInactiveTintColor: \"gray\",\r\n        tabBarActiveTintColor: \"tomato\",\r\n      })}\r\n    >\r\n      <Tab.Screen name=\"Home\" component={Res_Dashboard} />\r\n      <Tab.Screen name=\"Chat\" options={{ tabBarBadge: 3 }} component={Chat} />\r\n      <Tab.Screen name=\"Profile\" component={Profile} />\r\n    </Tab.Navigator>\r\n  );\r\n};\r\n\r\nexport default BottomTabNavigator;\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,wBAAwB,QAAQ,+BAA+B;AACxE,SAASC,QAAQ,QAAQ,oBAAoB;AAC7C,OAAOC,OAAO;AACd,OAAOC,IAAI;AACX,OAAOC,aAAa;AAAwB,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAE5C,IAAMC,GAAG,GAAGT,wBAAwB,CAAC,CAAC;AAEtC,IAAMU,kBAAkB,GAAG,SAArBA,kBAAkBA,CAAA,EAAS;EAC/B,OACEF,KAAA,CAACC,GAAG,CAACE,SAAS;IACZC,aAAa,EAAE,SAAAA,cAAAC,IAAA;MAAA,IAAGC,KAAK,GAAAD,IAAA,CAALC,KAAK;MAAA,OAAQ;QAC7BC,WAAW,EAAE,KAAK;QAClBC,UAAU,EAAE,SAAAA,WAAAC,KAAA,EAA8B;UAAA,IAA3BC,OAAO,GAAAD,KAAA,CAAPC,OAAO;YAAEC,KAAK,GAAAF,KAAA,CAALE,KAAK;YAAEC,IAAI,GAAAH,KAAA,CAAJG,IAAI;UACjC,IAAIN,KAAK,CAACO,IAAI,KAAK,MAAM,EAAE;YACzB,OACEf,IAAA,CAACL,QAAQ;cACPoB,IAAI,EAAEH,OAAO,GAAG,UAAU,GAAG,kBAAmB;cAChDE,IAAI,EAAEA,IAAK;cACXD,KAAK,EAAEA;YAAM,CACd,CAAC;UAEN,CAAC,MAAM,IAAIL,KAAK,CAACO,IAAI,KAAK,MAAM,EAAE;YAChC,OACEf,IAAA,CAACL,QAAQ;cACPoB,IAAI,EACFH,OAAO,GACH,yBAAyB,GACzB,iCACL;cACDE,IAAI,EAAEA,IAAK;cACXD,KAAK,EAAEA;YAAM,CACd,CAAC;UAEN,CAAC,MAAM,IAAIL,KAAK,CAACO,IAAI,KAAK,SAAS,EAAE;YACnC,OACEf,IAAA,CAACL,QAAQ;cACPoB,IAAI,EACFH,OAAO,GAAG,mBAAmB,GAAG,2BACjC;cACDE,IAAI,EAAEA,IAAK;cACXD,KAAK,EAAEA;YAAM,CACd,CAAC;UAEN;QACF,CAAC;QACDG,uBAAuB,EAAE,MAAM;QAC/BC,qBAAqB,EAAE;MACzB,CAAC;IAAA,CAAE;IAAAC,QAAA,GAEHlB,IAAA,CAACG,GAAG,CAACgB,MAAM;MAACJ,IAAI,EAAC,MAAM;MAACK,SAAS,EAAEtB;IAAc,CAAE,CAAC,EACpDE,IAAA,CAACG,GAAG,CAACgB,MAAM;MAACJ,IAAI,EAAC,MAAM;MAACM,OAAO,EAAE;QAAEC,WAAW,EAAE;MAAE,CAAE;MAACF,SAAS,EAAEvB;IAAK,CAAE,CAAC,EACxEG,IAAA,CAACG,GAAG,CAACgB,MAAM;MAACJ,IAAI,EAAC,SAAS;MAACK,SAAS,EAAExB;IAAQ,CAAE,CAAC;EAAA,CACpC,CAAC;AAEpB,CAAC;AAED,eAAeQ,kBAAkB"},"metadata":{},"sourceType":"module","externalDependencies":[]}