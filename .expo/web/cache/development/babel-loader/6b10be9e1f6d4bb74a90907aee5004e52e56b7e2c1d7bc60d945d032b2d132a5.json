{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useContext, useState, useEffect } from \"react\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport { AuthContext } from \"../../AuthProvider\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport axios from 'axios';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\naxios.defaults.baseURL = 'http://127.0.0.1:8000';\nvar Stack = createStackNavigator();\nfunction DashboardScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useContext = useContext(AuthContext),\n    user = _useContext.user,\n    logout = _useContext.logout;\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    name = _useState2[0],\n    setName = _useState2[1];\n  useEffect(function () {\n    axios.defaults.headers.common['Authorization'] = \"Bearer \" + user.token;\n    axios.get('/api/user').then(function (response) {\n      setName(response.data.name);\n    }).catch(function (error) {\n      console.log(error.response);\n    });\n  }, []);\n  return _jsxs(View, {\n    style: {\n      flex: 1,\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    children: [_jsx(Text, {\n      children: \"Technician \"\n    }), _jsxs(Text, {\n      children: [\"User   :    \", user.email]\n    }), _jsxs(Text, {\n      children: [\"User from Server   :   \", name]\n    }), _jsxs(Text, {\n      children: [\"User role   :   \", user.role]\n    }), _jsxs(Text, {\n      children: [\"User id   :   \", user.id]\n    }), _jsx(Button, {\n      title: \"Go to Settings\",\n      onPress: function onPress() {\n        return navigation.navigate('Settings');\n      }\n    }), _jsx(Button, {\n      title: \"Logooout\",\n      onPress: function onPress() {\n        return logout();\n      }\n    })]\n  });\n}\nfunction SettingsScreen(_ref2) {\n  var navigation = _ref2.navigation;\n  var _useContext2 = useContext(AuthContext),\n    user = _useContext2.user,\n    logout = _useContext2.logout;\n  return _jsxs(View, {\n    style: {\n      flex: 1,\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    children: [_jsx(Text, {\n      children: \"Settings Screen\"\n    }), _jsxs(Text, {\n      children: [\"User: \", user.email]\n    }), _jsx(Button, {\n      title: \"Go to Dashboard\",\n      onPress: function onPress() {\n        return navigation.navigate('Dashboard Admin');\n      }\n    }), _jsx(Button, {\n      title: \"Logout\",\n      onPress: function onPress() {\n        return logout();\n      }\n    })]\n  });\n}\nvar Products = function Products() {\n  return _jsxs(Stack.Navigator, {\n    children: [_jsx(Stack.Screen, {\n      name: \"Dashboard Tehnician\",\n      component: DashboardScreen,\n      options: {\n        headerStyle: {\n          backgroundColor: '#f4511e'\n        },\n        headerTintColor: '#fff',\n        paddingleft: 120,\n        headerTitleStyle: {\n          fontWeight: 'bold'\n        }\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"Settings\",\n      component: SettingsScreen\n    })]\n  });\n};\nexport default Products;","map":{"version":3,"names":["React","useContext","useState","useEffect","createStackNavigator","AuthContext","axios","defaults","baseURL","Stack","DashboardScreen","navigation","user","logout","name","setName","headers","common","token","get","then","response","data","catch","error","console","log","flex","alignItems","justifyContent","email","role","id","navigate","SettingsScreen","Products","headerStyle","backgroundColor","headerTintColor","paddingleft","headerTitleStyle","fontWeight"],"sources":["D:/FYP/Projects/App_Projects/React Native Expo Cli Projects/gharbar_app/src/screens/Technician_Screens/products.js"],"sourcesContent":["import React, { useContext, useState, useEffect } from \"react\";\r\nimport { createStackNavigator } from \"@react-navigation/stack\";\r\nimport { AuthContext } from \"../../AuthProvider\";\r\nimport { Button, Text, View } from \"react-native\";\r\nimport axios from 'axios';\r\n\r\naxios.defaults.baseURL = 'http://127.0.0.1:8000';\r\nconst Stack = createStackNavigator();\r\n\r\nfunction DashboardScreen({ navigation }) {\r\n  const { user, logout } = useContext(AuthContext)\r\n  const [name, setName] = useState(null);\r\n\r\n  useEffect(() => {\r\n    axios.defaults.headers.common['Authorization'] = `Bearer ${user.token}`;\r\n\r\n    axios.get('/api/user')\r\n      .then(response => {\r\n        setName(response.data.name);\r\n      })\r\n      .catch(error => {\r\n        console.log(error.response);\r\n      })\r\n\r\n  }, []);\r\n  return (\r\n    <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center' }}>\r\n      <Text>Technician </Text>\r\n      <Text>User   :    {user.email}</Text>\r\n      <Text>User from Server   :   {name}</Text>\r\n      <Text>User role   :   {user.role}</Text>\r\n      <Text>User id   :   {user.id}</Text>\r\n      <Button title=\"Go to Settings\" onPress={() => navigation.navigate('Settings')} />\r\n      <Button title=\"Logooout\" onPress={() => logout()} />\r\n    </View>\r\n  );\r\n}\r\n\r\nfunction SettingsScreen({ navigation }) {\r\n  const { user, logout } = useContext(AuthContext)\r\n\r\n  return (\r\n    <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center' }}>\r\n      <Text>Settings Screen</Text>\r\n      <Text>User: {user.email}</Text>\r\n      <Button title=\"Go to Dashboard\" onPress={() => navigation.navigate('Dashboard Admin')} />\r\n      <Button title=\"Logout\" onPress={() => logout()} />\r\n    </View>\r\n  );\r\n}\r\n\r\nconst Products = () => {\r\n  return (\r\n    <Stack.Navigator>\r\n      <Stack.Screen name=\"Dashboard Tehnician\" component={DashboardScreen}  options={{\r\n          headerStyle: {\r\n            backgroundColor: '#f4511e',},\r\n          headerTintColor: '#fff',\r\n          paddingleft:120,\r\n          headerTitleStyle: {\r\n            fontWeight: 'bold',\r\n          },\r\n        }}/>\r\n      <Stack.Screen name=\"Settings\" component={SettingsScreen} />\r\n    </Stack.Navigator>\r\n  )\r\n};\r\n\r\nexport default Products;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}