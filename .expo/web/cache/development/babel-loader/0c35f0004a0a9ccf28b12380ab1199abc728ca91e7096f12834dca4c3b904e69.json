{"ast":null,"code":"import React from \"react\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Ionicons } from '@expo/vector-icons';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { MainStackNavigator, ContactStackNavigator } from \"./StackNavigator\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Tab = createBottomTabNavigator();\nvar BottomTabNavigator = function BottomTabNavigator() {\n  return _jsxs(Tab.Navigator, {\n    screenOptions: function screenOptions(_ref) {\n      var route = _ref.route;\n      return {\n        tabBarIcon: function tabBarIcon(_ref2) {\n          var focused = _ref2.focused,\n            color = _ref2.color,\n            size = _ref2.size;\n          if (route.name === 'Home') {\n            return _jsx(Ionicons, {\n              name: focused ? 'ios-home' : 'ios-home-outline',\n              size: size,\n              color: color\n            });\n          } else if (route.name === 'Chat') {\n            return _jsx(Ionicons, {\n              name: focused ? 'ios-chatbubble-ellipses' : 'ios-chatbubble-ellipses-outline',\n              size: size,\n              color: color\n            });\n          } else if (route.name === 'Profile') {\n            return _jsx(Ionicons, {\n              name: focused ? 'ios-person-circle' : 'ios-person-circle-outline',\n              size: size,\n              color: color\n            });\n          }\n        },\n        tabBarInactiveTintColor: 'gray',\n        tabBarActiveTintColor: 'tomato'\n      };\n    },\n    children: [_jsx(Tab.Screen, {\n      name: \"Home\",\n      component: MainStackNavigator\n    }), _jsx(Tab.Screen, {\n      name: \"Chat\",\n      options: {\n        tabBarBadge: 3\n      },\n      component: MainStackNavigator\n    }), _jsx(Tab.Screen, {\n      name: \"Profile\",\n      component: ContactStackNavigator\n    })]\n  });\n};\nexport default BottomTabNavigator;","map":{"version":3,"names":["React","createBottomTabNavigator","Ionicons","NavigationContainer","MainStackNavigator","ContactStackNavigator","Tab","BottomTabNavigator","route","tabBarIcon","focused","color","size","name","tabBarInactiveTintColor","tabBarActiveTintColor","tabBarBadge"],"sources":["D:/FYP/Projects/App_Projects/React Native Expo Cli Projects/gharbar_app/src/screens/Admin_Screens/TabNavigator.js"],"sourcesContent":["import React from \"react\";\r\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\r\nimport { Text, View } from 'react-native';\r\nimport { Ionicons } from '@expo/vector-icons';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { MainStackNavigator, ContactStackNavigator } from \"./StackNavigator\";\r\n\r\nconst Tab = createBottomTabNavigator();\r\n\r\nconst BottomTabNavigator = () => {\r\n  return (\r\n    <Tab.Navigator screenOptions={({ route }) => ({\r\n      tabBarIcon: ({ focused, color, size }) => {\r\n        if (route.name === 'Home') {\r\n          return (\r\n            <Ionicons\r\n              name={\r\n                focused\r\n                  ? 'ios-home'\r\n                  : 'ios-home-outline'\r\n              }\r\n              size={size}\r\n              color={color}\r\n            />\r\n          );\r\n        }else if (route.name === 'Chat') {\r\n          return (\r\n            <Ionicons\r\n              name={focused ? 'ios-chatbubble-ellipses' : 'ios-chatbubble-ellipses-outline'}\r\n              size={size}\r\n              color={color}\r\n            />\r\n          );\r\n        } else if (route.name === 'Profile') {\r\n          return (\r\n            <Ionicons\r\n              name={focused ? 'ios-person-circle' : 'ios-person-circle-outline'}\r\n              size={size}\r\n              color={color}\r\n            />\r\n          );\r\n        }\r\n      },\r\n      tabBarInactiveTintColor: 'gray',\r\n      tabBarActiveTintColor: 'tomato',\r\n    })}\r\n  >\r\n      <Tab.Screen name=\"Home\" component={MainStackNavigator} />\r\n      <Tab.Screen name=\"Chat\" options={{ tabBarBadge: 3 }} component={MainStackNavigator} />\r\n      <Tab.Screen name=\"Profile\" component={ContactStackNavigator} />\r\n    </Tab.Navigator>\r\n  );\r\n};\r\n\r\nexport default BottomTabNavigator;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,wBAAwB,QAAQ,+BAA+B;AAAC;AAAA;AAEzE,SAASC,QAAQ,QAAQ,oBAAoB;AAC7C,SAASC,mBAAmB,QAAQ,0BAA0B;AAC9D,SAASC,kBAAkB,EAAEC,qBAAqB;AAA2B;AAAA;AAE7E,IAAMC,GAAG,GAAGL,wBAAwB,EAAE;AAEtC,IAAMM,kBAAkB,GAAG,SAArBA,kBAAkB,GAAS;EAC/B,OACE,MAAC,GAAG,CAAC,SAAS;IAAC,aAAa,EAAE;MAAA,IAAGC,KAAK,QAALA,KAAK;MAAA,OAAQ;QAC5CC,UAAU,EAAE,2BAA8B;UAAA,IAA3BC,OAAO,SAAPA,OAAO;YAAEC,KAAK,SAALA,KAAK;YAAEC,IAAI,SAAJA,IAAI;UACjC,IAAIJ,KAAK,CAACK,IAAI,KAAK,MAAM,EAAE;YACzB,OACE,KAAC,QAAQ;cACP,IAAI,EACFH,OAAO,GACH,UAAU,GACV,kBACL;cACD,IAAI,EAAEE,IAAK;cACX,KAAK,EAAED;YAAM,EACb;UAEN,CAAC,MAAK,IAAIH,KAAK,CAACK,IAAI,KAAK,MAAM,EAAE;YAC/B,OACE,KAAC,QAAQ;cACP,IAAI,EAAEH,OAAO,GAAG,yBAAyB,GAAG,iCAAkC;cAC9E,IAAI,EAAEE,IAAK;cACX,KAAK,EAAED;YAAM,EACb;UAEN,CAAC,MAAM,IAAIH,KAAK,CAACK,IAAI,KAAK,SAAS,EAAE;YACnC,OACE,KAAC,QAAQ;cACP,IAAI,EAAEH,OAAO,GAAG,mBAAmB,GAAG,2BAA4B;cAClE,IAAI,EAAEE,IAAK;cACX,KAAK,EAAED;YAAM,EACb;UAEN;QACF,CAAC;QACDG,uBAAuB,EAAE,MAAM;QAC/BC,qBAAqB,EAAE;MACzB,CAAC;IAAA,CAAE;IAAA,WAED,KAAC,GAAG,CAAC,MAAM;MAAC,IAAI,EAAC,MAAM;MAAC,SAAS,EAAEX;IAAmB,EAAG,EACzD,KAAC,GAAG,CAAC,MAAM;MAAC,IAAI,EAAC,MAAM;MAAC,OAAO,EAAE;QAAEY,WAAW,EAAE;MAAE,CAAE;MAAC,SAAS,EAAEZ;IAAmB,EAAG,EACtF,KAAC,GAAG,CAAC,MAAM;MAAC,IAAI,EAAC,SAAS;MAAC,SAAS,EAAEC;IAAsB,EAAG;EAAA,EACjD;AAEpB,CAAC;AAED,eAAeE,kBAAkB"},"metadata":{},"sourceType":"module","externalDependencies":[]}