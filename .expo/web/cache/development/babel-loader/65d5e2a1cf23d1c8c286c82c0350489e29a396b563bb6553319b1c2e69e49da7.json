{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport { AsyncStorage } from \"react-native-web/dist/index\";\nimport * as SecureStore from 'expo-secure-store';\nimport axios from 'axios';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\naxios.defaults.baseURL = 'http://127.0.0.1:8000';\nexport var AuthContext = React.createContext({});\nexport var AuthProvider = function AuthProvider(_ref) {\n  var children = _ref.children;\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    user = _useState2[0],\n    setUser = _useState2[1];\n  var _useState3 = useState(null),\n    _useState4 = _slicedToArray(_useState3, 2),\n    error = _useState4[0],\n    setError = _useState4[1];\n  return _jsx(AuthContext.Provider, {\n    value: {\n      user: user,\n      setUser: setUser,\n      error: error,\n      login: function login(email, password) {\n        axios.post('/api/sanctum/token', {\n          email: email,\n          password: password,\n          device_name: 'mobile'\n        }).then(function (response) {\n          var userResponse = {\n            email: response.data.user.email,\n            token: response.data.token\n          };\n          console.log('successfully get this data -->', userResponse);\n          setUser(userResponse);\n          SecureStore.setItemAsync('user', JSON.stringify(userResponse));\n        }).catch(function (error) {\n          var key = Object.keys(error.response.data.errors)[0];\n          setError(error.response.data.errors[key][0]);\n          console.log(error, response);\n        });\n      },\n      logout: function logout() {\n        axios.defaults.headers.common['Authorization'] = \"Bearer \" + user.token;\n        axios.post('/api/logout').then(function (response) {\n          setUser(null);\n          SecureStore.deleteItemAsync('user');\n        }).catch(function (error) {\n          console.log(error.response);\n        });\n      }\n    },\n    children: children\n  });\n};","map":{"version":3,"names":["React","useState","AsyncStorage","SecureStore","axios","defaults","baseURL","AuthContext","createContext","AuthProvider","children","user","setUser","error","setError","login","email","password","post","device_name","then","response","userResponse","data","token","console","log","setItemAsync","JSON","stringify","catch","key","Object","keys","errors","logout","headers","common","deleteItemAsync"],"sources":["D:/FYP/Projects/App_Projects/React Native Expo Cli Projects/gharbar_app/src/AuthProvider.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { AsyncStorage } from 'react-native';\nimport * as SecureStore from 'expo-secure-store';\nimport axios from 'axios';\n\naxios.defaults.baseURL = 'http://127.0.0.1:8000';\n\nexport const AuthContext = React.createContext({});\n\nexport const AuthProvider = ({children}) => {\n  const [user, setUser] = useState(null);\n  const [error, setError] = useState(null);\n\n  return (\n    <AuthContext.Provider\n      value={{\n        user,\n        setUser,\n        error,\n        login: (email, password) => {\n          axios.post('/api/sanctum/token',{\n            email,\n            // shabaz@gmail.com\n            password,\n            //   resident@gmail\n            device_name:'mobile',\n          })\n          .then(response => {\n            const userResponse = {\n              email: response.data.user.email,\n              token: response.data.token,\n            }\n            console.log('successfully get this data -->',userResponse);\n            setUser(userResponse);\n            SecureStore.setItemAsync('user', JSON.stringify(userResponse));\n          })\n          .catch(error => {\n            const key = Object.keys(error.response.data.errors)[0];\n            setError(error.response.data.errors[key][0]);\n            console.log(error, response);\n          })\n        },\n        logout: () => {\n          axios.defaults.headers.common['Authorization'] = `Bearer ${user.token}`;\n\n          axios.post('/api/logout')\n          .then(response => {\n\n            setUser(null);\n            SecureStore.deleteItemAsync('user')\n          })\n          .catch(error => {\n            console.log(error.response);\n          })\n        }\n      }}>\n      {children}\n    </AuthContext.Provider>\n  );\n}\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAC/BC,YAAY;AACrB,OAAO,KAAKC,WAAW,MAAM,mBAAmB;AAChD,OAAOC,KAAK,MAAM,OAAO;AAAC;AAE1BA,KAAK,CAACC,QAAQ,CAACC,OAAO,GAAG,uBAAuB;AAEhD,OAAO,IAAMC,WAAW,GAAGP,KAAK,CAACQ,aAAa,CAAC,CAAC,CAAC,CAAC;AAElD,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAY,OAAmB;EAAA,IAAdC,QAAQ,QAARA,QAAQ;EACpC,gBAAwBT,QAAQ,CAAC,IAAI,CAAC;IAAA;IAA/BU,IAAI;IAAEC,OAAO;EACpB,iBAA0BX,QAAQ,CAAC,IAAI,CAAC;IAAA;IAAjCY,KAAK;IAAEC,QAAQ;EAEtB,OACE,KAAC,WAAW,CAAC,QAAQ;IACnB,KAAK,EAAE;MACLH,IAAI,EAAJA,IAAI;MACJC,OAAO,EAAPA,OAAO;MACPC,KAAK,EAALA,KAAK;MACLE,KAAK,EAAE,eAACC,KAAK,EAAEC,QAAQ,EAAK;QAC1Bb,KAAK,CAACc,IAAI,CAAC,oBAAoB,EAAC;UAC9BF,KAAK,EAALA,KAAK;UAELC,QAAQ,EAARA,QAAQ;UAERE,WAAW,EAAC;QACd,CAAC,CAAC,CACDC,IAAI,CAAC,UAAAC,QAAQ,EAAI;UAChB,IAAMC,YAAY,GAAG;YACnBN,KAAK,EAAEK,QAAQ,CAACE,IAAI,CAACZ,IAAI,CAACK,KAAK;YAC/BQ,KAAK,EAAEH,QAAQ,CAACE,IAAI,CAACC;UACvB,CAAC;UACDC,OAAO,CAACC,GAAG,CAAC,gCAAgC,EAACJ,YAAY,CAAC;UAC1DV,OAAO,CAACU,YAAY,CAAC;UACrBnB,WAAW,CAACwB,YAAY,CAAC,MAAM,EAAEC,IAAI,CAACC,SAAS,CAACP,YAAY,CAAC,CAAC;QAChE,CAAC,CAAC,CACDQ,KAAK,CAAC,UAAAjB,KAAK,EAAI;UACd,IAAMkB,GAAG,GAAGC,MAAM,CAACC,IAAI,CAACpB,KAAK,CAACQ,QAAQ,CAACE,IAAI,CAACW,MAAM,CAAC,CAAC,CAAC,CAAC;UACtDpB,QAAQ,CAACD,KAAK,CAACQ,QAAQ,CAACE,IAAI,CAACW,MAAM,CAACH,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;UAC5CN,OAAO,CAACC,GAAG,CAACb,KAAK,EAAEQ,QAAQ,CAAC;QAC9B,CAAC,CAAC;MACJ,CAAC;MACDc,MAAM,EAAE,kBAAM;QACZ/B,KAAK,CAACC,QAAQ,CAAC+B,OAAO,CAACC,MAAM,CAAC,eAAe,CAAC,eAAa1B,IAAI,CAACa,KAAO;QAEvEpB,KAAK,CAACc,IAAI,CAAC,aAAa,CAAC,CACxBE,IAAI,CAAC,UAAAC,QAAQ,EAAI;UAEhBT,OAAO,CAAC,IAAI,CAAC;UACbT,WAAW,CAACmC,eAAe,CAAC,MAAM,CAAC;QACrC,CAAC,CAAC,CACDR,KAAK,CAAC,UAAAjB,KAAK,EAAI;UACdY,OAAO,CAACC,GAAG,CAACb,KAAK,CAACQ,QAAQ,CAAC;QAC7B,CAAC,CAAC;MACJ;IACF,CAAE;IAAA,UACDX;EAAQ,EACY;AAE3B,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}