{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect, useContext } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport { AsyncStorage } from \"react-native-web/dist/index\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { AuthContext } from \"./AuthProvider\";\nimport { Authentication } from \"./Authentication\";\nimport { Dash_Res } from \"./Dash_Res\";\nimport { Dash_Admin } from \"./Dash_Admin\";\nimport { Dash_Tech } from \"./Dash_Technician\";\nimport * as SecureStore from 'expo-secure-store';\nimport Home from \"./screens/Admin_Screens/Home\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function Routes() {\n  var _useContext = useContext(AuthContext),\n    user = _useContext.user,\n    setUser = _useContext.setUser,\n    login = _useContext.login,\n    logout = _useContext.logout;\n  var _useState = useState(true),\n    _useState2 = _slicedToArray(_useState, 2),\n    loading = _useState2[0],\n    setLoading = _useState2[1];\n  useEffect(function () {\n    SecureStore.getItemAsync('user').then(function (userString) {\n      if (userString) {\n        console.log(\"hafiz g, idr haaaa #############\");\n        login();\n        userObject = JSON.parse(userString);\n        setUser(userObject);\n      }\n      setLoading(false);\n    }).catch(function (err) {\n      console.log(err);\n      setLoading(false);\n    });\n  }, []);\n  if (loading) {\n    return _jsx(View, {\n      style: {\n        flex: 1,\n        alignItems: 'center',\n        justifyContent: 'center'\n      },\n      children: _jsx(ActivityIndicator, {\n        size: \"large\"\n      })\n    });\n  }\n  return _jsx(NavigationContainer, {\n    children: user ? user.role == 2 ? _jsx(Dash_Admin, {}) : user.role == 1 ? _jsx(Dash_Res, {}) : _jsx(Dash_Tech, {}) : _jsx(Authentication, {})\n  });\n}","map":{"version":3,"names":["React","useState","useEffect","useContext","AsyncStorage","NavigationContainer","AuthContext","Authentication","Dash_Res","Dash_Admin","Dash_Tech","SecureStore","Home","Routes","user","setUser","login","logout","loading","setLoading","getItemAsync","then","userString","console","log","userObject","JSON","parse","catch","err","flex","alignItems","justifyContent","role"],"sources":["D:/FYP/Projects/App_Projects/React Native Expo Cli Projects/gharbar_app/src/Routes.js"],"sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\nimport { StyleSheet, Text, View, Button, TextInput, ActivityIndicator, AsyncStorage } from 'react-native';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { AuthContext } from './AuthProvider';\nimport { Authentication } from './Authentication';\nimport { Dash_Res } from './Dash_Res';\nimport { Dash_Admin } from \"./Dash_Admin\";\nimport { Dash_Tech } from \"./Dash_Technician\";\nimport * as SecureStore from 'expo-secure-store';\nimport Home from \"./screens/Admin_Screens/Home\";\n\nexport default function Routes() {\n  const { user, setUser, login, logout } = useContext(AuthContext)\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    // check if the user is logged in or not\n    SecureStore.getItemAsync('user')\n      .then(userString => {\n        if (userString) {\n          console.log(\"hafiz g, idr haaaa #############\")\n          // decode it\n          login();\n          userObject = JSON.parse(userString)\n          setUser(userObject);\n        }\n        setLoading(false);\n      })\n      .catch(err => {\n        console.log(err);\n        setLoading(false)\n      })\n  }, []);\n\n  if (loading) {\n    return (\n      <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center' }}>\n        <ActivityIndicator size=\"large\" />\n      </View>\n    )\n  }\n  return (\n  <NavigationContainer>\n     {user ? ((user.role == 2) ? <Dash_Admin />\n                      : (user.role==1 ? <Dash_Res/>\n                                    : <Dash_Tech />) )\n        : <Authentication />}\n        \n  </NavigationContainer>\n  );\n}"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,UAAU,QAAQ,OAAO;AAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACQC,YAAY;AACnF,SAASC,mBAAmB,QAAQ,0BAA0B;AAC9D,SAASC,WAAW;AACpB,SAASC,cAAc;AACvB,SAASC,QAAQ;AACjB,SAASC,UAAU;AACnB,SAASC,SAAS;AAClB,OAAO,KAAKC,WAAW,MAAM,mBAAmB;AAChD,OAAOC,IAAI;AAAqC;AAEhD,eAAe,SAASC,MAAM,GAAG;EAC/B,kBAAyCV,UAAU,CAACG,WAAW,CAAC;IAAxDQ,IAAI,eAAJA,IAAI;IAAEC,OAAO,eAAPA,OAAO;IAAEC,KAAK,eAALA,KAAK;IAAEC,MAAM,eAANA,MAAM;EACpC,gBAA8BhB,QAAQ,CAAC,IAAI,CAAC;IAAA;IAArCiB,OAAO;IAAEC,UAAU;EAE1BjB,SAAS,CAAC,YAAM;IAEdS,WAAW,CAACS,YAAY,CAAC,MAAM,CAAC,CAC7BC,IAAI,CAAC,UAAAC,UAAU,EAAI;MAClB,IAAIA,UAAU,EAAE;QACdC,OAAO,CAACC,GAAG,CAAC,kCAAkC,CAAC;QAE/CR,KAAK,EAAE;QACPS,UAAU,GAAGC,IAAI,CAACC,KAAK,CAACL,UAAU,CAAC;QACnCP,OAAO,CAACU,UAAU,CAAC;MACrB;MACAN,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,CAAC,CACDS,KAAK,CAAC,UAAAC,GAAG,EAAI;MACZN,OAAO,CAACC,GAAG,CAACK,GAAG,CAAC;MAChBV,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAEN,IAAID,OAAO,EAAE;IACX,OACE,KAAC,IAAI;MAAC,KAAK,EAAE;QAAEY,IAAI,EAAE,CAAC;QAAEC,UAAU,EAAE,QAAQ;QAAEC,cAAc,EAAE;MAAS,CAAE;MAAA,UACvE,KAAC,iBAAiB;QAAC,IAAI,EAAC;MAAO;IAAG,EAC7B;EAEX;EACA,OACA,KAAC,mBAAmB;IAAA,UAChBlB,IAAI,GAAKA,IAAI,CAACmB,IAAI,IAAI,CAAC,GAAI,KAAC,UAAU,KAAG,GACtBnB,IAAI,CAACmB,IAAI,IAAE,CAAC,GAAG,KAAC,QAAQ,KAAE,GACb,KAAC,SAAS,KAAI,GAC1C,KAAC,cAAc;EAAG,EAEJ;AAExB"},"metadata":{},"sourceType":"module","externalDependencies":[]}