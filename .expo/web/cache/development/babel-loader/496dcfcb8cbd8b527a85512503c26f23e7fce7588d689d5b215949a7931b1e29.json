{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect, useContext } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport { AsyncStorage } from \"react-native-web/dist/index\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { AuthContext } from \"./AuthProvider\";\nimport { AuthStack } from \"./AuthStack\";\nimport { AppStack } from \"./AppStack\";\nimport * as SecureStore from 'expo-secure-store';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function Routes() {\n  var _useContext = useContext(AuthContext),\n    user = _useContext.user,\n    setUser = _useContext.setUser,\n    login = _useContext.login,\n    logout = _useContext.logout;\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    loading = _useState2[0],\n    setLoading = _useState2[1];\n  useEffect(function () {\n    SecureStore.getItemAsync('user').then(function (userString) {\n      if (userString) {\n        login();\n      }\n      setLoading(false);\n    }).catch(function (err) {\n      console.log(err);\n      setLoading;\n    });\n  }, []);\n  if (loading) {\n    return _jsx(View, {\n      style: {\n        flex: 1,\n        alignItems: 'center',\n        justifyContent: 'center'\n      },\n      children: _jsx(ActivityIndicator, {\n        size: \"large\"\n      })\n    });\n  }\n  return _jsx(NavigationContainer, {\n    children: user ? _jsx(AppStack, {}) : _jsx(AuthStack, {})\n  });\n}","map":{"version":3,"names":["React","useState","useEffect","useContext","StyleSheet","Text","View","Button","TextInput","ActivityIndicator","AsyncStorage","NavigationContainer","AuthContext","AuthStack","AppStack","SecureStore","jsx","_jsx","Routes","_useContext","user","setUser","login","logout","_useState","_useState2","_slicedToArray","loading","setLoading","getItemAsync","then","userString","catch","err","console","log","style","flex","alignItems","justifyContent","children","size"],"sources":["D:/FYP/Projects/App_Projects/React Native Expo Cli Projects/gharbar_app/src/Routes.js"],"sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\nimport { StyleSheet, Text, View, Button, TextInput, ActivityIndicator, AsyncStorage } from 'react-native';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { AuthContext } from './AuthProvider';\nimport { AuthStack } from './AuthStack';\nimport { AppStack } from './AppStack';\nimport * as SecureStore from 'expo-secure-store';\n\nexport default function Routes() {\n  const { user, setUser, login, logout } = useContext(AuthContext)\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    // check if the user is logged in or not\n    SecureStore.getItemAsync('user')\n      .then(userString => {\n        if (userString) {\n          // decode it\n          login();\n          // userObject = JSON.parse(userString)\n          // setUser(userObject);\n        }\n        setLoading(false);\n      })\n      .catch(err => {\n        console.log(err);\n        setLoading\n      })\n  }, []);\n\n  if (loading) {\n    return (\n      <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center' }}>\n        <ActivityIndicator size=\"large\" />\n      </View>\n    )\n  }\n\n  return (\n    <NavigationContainer>\n      {user ? <AppStack /> : <AuthStack />}\n    </NavigationContainer>\n  );\n}\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,UAAU,QAAQ,OAAO;AAAC,OAAAC,UAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,MAAA;AAAA,OAAAC,SAAA;AAAA,OAAAC,iBAAA;AAAA,SACQC,YAAY;AACnF,SAASC,mBAAmB,QAAQ,0BAA0B;AAC9D,SAASC,WAAW;AACpB,SAASC,SAAS;AAClB,SAASC,QAAQ;AACjB,OAAO,KAAKC,WAAW,MAAM,mBAAmB;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAEjD,eAAe,SAASC,MAAMA,CAAA,EAAG;EAC/B,IAAAC,WAAA,GAAyChB,UAAU,CAACS,WAAW,CAAC;IAAxDQ,IAAI,GAAAD,WAAA,CAAJC,IAAI;IAAEC,OAAO,GAAAF,WAAA,CAAPE,OAAO;IAAEC,KAAK,GAAAH,WAAA,CAALG,KAAK;IAAEC,MAAM,GAAAJ,WAAA,CAANI,MAAM;EACpC,IAAAC,SAAA,GAA8BvB,QAAQ,CAAC,KAAK,CAAC;IAAAwB,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAtCG,OAAO,GAAAF,UAAA;IAAEG,UAAU,GAAAH,UAAA;EAE1BvB,SAAS,CAAC,YAAM;IAEda,WAAW,CAACc,YAAY,CAAC,MAAM,CAAC,CAC7BC,IAAI,CAAC,UAAAC,UAAU,EAAI;MAClB,IAAIA,UAAU,EAAE;QAEdT,KAAK,EAAE;MAGT;MACAM,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,CAAC,CACDI,KAAK,CAAC,UAAAC,GAAG,EAAI;MACZC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;MAChBL,UAAU;IACZ,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAEN,IAAID,OAAO,EAAE;IACX,OACEV,IAAA,CAACX,IAAI;MAAC8B,KAAK,EAAE;QAAEC,IAAI,EAAE,CAAC;QAAEC,UAAU,EAAE,QAAQ;QAAEC,cAAc,EAAE;MAAS,CAAE;MAAAC,QAAA,EACvEvB,IAAA,CAACR,iBAAiB;QAACgC,IAAI,EAAC;MAAO;IAAG,EAC7B;EAEX;EAEA,OACExB,IAAA,CAACN,mBAAmB;IAAA6B,QAAA,EACjBpB,IAAI,GAAGH,IAAA,CAACH,QAAQ,KAAG,GAAGG,IAAA,CAACJ,SAAS;EAAG,EAChB;AAE1B"},"metadata":{},"sourceType":"module","externalDependencies":[]}