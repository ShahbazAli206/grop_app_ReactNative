{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport { useEffect as $cKEhs$useEffect } from \"react\";\nimport { useToggle as $cKEhs$useToggle } from \"@react-aria/toggle\";\nimport { filterDOMProps as $cKEhs$filterDOMProps, mergeProps as $cKEhs$mergeProps } from \"@react-aria/utils\";\nimport { useField as $cKEhs$useField } from \"@react-aria/label\";\nimport { useToggleState as $cKEhs$useToggleState } from \"@react-stately/toggle\";\nfunction $406796ff087fe49b$export$e375f10ce42261c5(props, state, inputRef) {\n  var _ref = (0, $cKEhs$useToggle)(props, state, inputRef),\n    inputProps = _ref.inputProps,\n    isSelected = _ref.isSelected,\n    isPressed = _ref.isPressed,\n    isDisabled = _ref.isDisabled,\n    isReadOnly = _ref.isReadOnly;\n  var isIndeterminate = props.isIndeterminate;\n  (0, $cKEhs$useEffect)(function () {\n    if (inputRef.current) inputRef.current.indeterminate = isIndeterminate;\n  });\n  return {\n    inputProps: _objectSpread(_objectSpread({}, inputProps), {}, {\n      checked: isSelected\n    }),\n    isSelected: isSelected,\n    isPressed: isPressed,\n    isDisabled: isDisabled,\n    isReadOnly: isReadOnly\n  };\n}\nvar $1ae600c947479353$export$31440636951aa68c = new WeakMap();\nvar $1ae600c947479353$export$a3077e9c93f7360f = new WeakMap();\nvar $1ae600c947479353$export$d5679492e2864181 = new WeakMap();\nfunction $1e9fce0cfacc738b$export$49ff6f28c54f1cbe(props, state) {\n  var isDisabled = props.isDisabled,\n    name = props.name;\n  var _ref2 = (0, $cKEhs$useField)(_objectSpread(_objectSpread({}, props), {}, {\n      labelElementType: \"span\"\n    })),\n    labelProps = _ref2.labelProps,\n    fieldProps = _ref2.fieldProps,\n    descriptionProps = _ref2.descriptionProps,\n    errorMessageProps = _ref2.errorMessageProps;\n  (0, $1ae600c947479353$export$a3077e9c93f7360f).set(state, descriptionProps.id);\n  (0, $1ae600c947479353$export$d5679492e2864181).set(state, errorMessageProps.id);\n  var domProps = (0, $cKEhs$filterDOMProps)(props, {\n    labelable: true\n  });\n  (0, $1ae600c947479353$export$31440636951aa68c).set(state, name);\n  return {\n    groupProps: (0, $cKEhs$mergeProps)(domProps, _objectSpread({\n      role: \"group\",\n      \"aria-disabled\": isDisabled || undefined\n    }, fieldProps)),\n    labelProps: labelProps,\n    descriptionProps: descriptionProps,\n    errorMessageProps: errorMessageProps\n  };\n}\nfunction $fba3e38d5ca8983f$export$353b32fc6898d37d(props, state, inputRef) {\n  var toggleState = (0, $cKEhs$useToggleState)({\n    isReadOnly: props.isReadOnly || state.isReadOnly,\n    isSelected: state.isSelected(props.value),\n    onChange: function onChange(isSelected) {\n      if (isSelected) state.addValue(props.value);else state.removeValue(props.value);\n      if (props.onChange) props.onChange(isSelected);\n    }\n  });\n  var res = (0, $406796ff087fe49b$export$e375f10ce42261c5)(_objectSpread(_objectSpread({}, props), {}, {\n    isReadOnly: props.isReadOnly || state.isReadOnly,\n    isDisabled: props.isDisabled || state.isDisabled,\n    name: props.name || (0, $1ae600c947479353$export$31440636951aa68c).get(state)\n  }), toggleState, inputRef);\n  return _objectSpread(_objectSpread({}, res), {}, {\n    inputProps: _objectSpread(_objectSpread({}, res.inputProps), {}, {\n      \"aria-describedby\": [state.validationState === \"invalid\" ? (0, $1ae600c947479353$export$d5679492e2864181).get(state) : null, (0, $1ae600c947479353$export$a3077e9c93f7360f).get(state)].filter(Boolean).join(\" \") || undefined\n    })\n  });\n}\nexport { $406796ff087fe49b$export$e375f10ce42261c5 as useCheckbox, $1e9fce0cfacc738b$export$49ff6f28c54f1cbe as useCheckboxGroup, $fba3e38d5ca8983f$export$353b32fc6898d37d as useCheckboxGroupItem };","map":{"version":3,"mappings":";;;;;;;;AAsCO,SAASA,0CAAYC,KAAwB,EAAEC,KAAkB,EAAEC,QAAqC,EAAgB;EAC7H,WAAkE,oBAAS,EAACF,OAAOC,OAAOC;IAArFC,kBAADA;IAAaC,kBAAFA;IAAcC,iBAAFA;IAAaC,kBAAFA;IAAcC,kBAAFA;EAElD,IAAKC,kBAAmBR,MAApBQ;EACJ,oBAAS,EAAC,YAAM;IAGd,IAAIN,SAASO,OAAO,EAClBP,SAASO,OAAO,CAACC,aAAa,GAAGF;EAErC;EAEA,OAAO;IACLL,4CACKA,UAAU;MACbQ,SAASP;IAAA,EACX;gBACAA;eACAC;gBACAC;gBACAC;EACF;AACF;AChDA,IAEaK,4CAAqB,IAAIC;AAC/B,IAAMC,4CAA8B,IAAID;AACxC,IAAME,4CAA+B,IAAIF;ACoBzC,SAASG,0CAAiBhB,KAA6B,EAAEC,KAAyB,EAAqB;EAC5G,IAAKK,aAAoBN,MAArBM;IAAaW,OAAQjB,MAAViB;EAEf,YAAoE,mBAAO,kCACtEjB,KAAK;MAGRkB,kBAAkB;IAAA,GACpB;IALKC,mBAADA;IAAaC,mBAAFA;IAAcC,yBAAFA;IAAoBC,0BAAFA;EAM7C,6CAA0B,EAAEC,GAAG,CAACtB,OAAOoB,iBAAiBG,EAAE;EAC1D,6CAA2B,EAAED,GAAG,CAACtB,OAAOqB,kBAAkBE,EAAE;EAE5D,IAAIC,WAAW,yBAAa,EAAEzB,OAAO;IAAC0B,WAAW;EAAI;EAGrD,6CAAiB,EAAEH,GAAG,CAACtB,OAAOgB;EAE9B,OAAO;IACLU,YAAY,qBAAU,EAACF;MACrBG,MAAM;MACN,iBAAiBtB,cAAcuB;IAAA,GAC5BT,UAAU,EACf;gBACAD;sBACAE;uBACAC;EACF;AACF;ACrCO,SAASQ,0CAAqB9B,KAAiC,EAAEC,KAAyB,EAAEC,QAAqC,EAAgB;EACtJ,IAAM6B,cAAc,yBAAa,EAAE;IACjCxB,YAAYP,MAAMO,UAAU,IAAIN,MAAMM,UAAU;IAChDH,YAAYH,MAAMG,UAAU,CAACJ,MAAMgC,KAAK;IACxCC,4BAAS7B,UAAU,EAAE;MACnB,IAAIA,YACFH,MAAMiC,QAAQ,CAAClC,MAAMgC,KAAK,OAE1B/B,MAAMkC,WAAW,CAACnC,MAAMgC,KAAK;MAG/B,IAAIhC,MAAMiC,QAAQ,EAChBjC,MAAMiC,QAAQ,CAAC7B;IAEnB;EACF;EAEA,IAAIgC,MAAM,6CAAU,kCACfpC,KAAK;IACRO,YAAYP,MAAMO,UAAU,IAAIN,MAAMM,UAAU;IAChDD,YAAYN,MAAMM,UAAU,IAAIL,MAAMK,UAAU;IAChDW,MAAMjB,MAAMiB,IAAI,IAAI,6CAAiB,EAAEoB,GAAG,CAACpC;EAAA,IAC1C8B,aAAa7B;EAEhB,uCACKkC,GAAG;IACNjC,4CACKiC,IAAIjC,UAAU;MACjB,oBAAoB,CAClBF,MAAMqC,eAAe,KAAK,YAAY,6CAA4B,EAACD,GAAG,CAACpC,SAAS,IAAI,EACpF,6CAA0B,EAAEoC,GAAG,CAACpC,OACjC,CAACsC,MAAM,CAACC,SAASC,IAAI,CAAC,QAAQZ;IAAA;EACjC;AAEJ","names":["$406796ff087fe49b$export$e375f10ce42261c5","props","state","inputRef","inputProps","isSelected","isPressed","isDisabled","isReadOnly","isIndeterminate","current","indeterminate","checked","$1ae600c947479353$export$31440636951aa68c","WeakMap","$1ae600c947479353$export$a3077e9c93f7360f","$1ae600c947479353$export$d5679492e2864181","$1e9fce0cfacc738b$export$49ff6f28c54f1cbe","name","labelElementType","labelProps","fieldProps","descriptionProps","errorMessageProps","set","id","domProps","labelable","groupProps","role","undefined","$fba3e38d5ca8983f$export$353b32fc6898d37d","toggleState","value","onChange","addValue","removeValue","res","get","validationState","filter","Boolean","join"],"sources":["D:\\FYP\\Projects\\App_Projects\\React Native Expo Cli Projects\\gharbar_app\\node_modules\\@react-aria\\checkbox\\dist\\packages\\@react-aria\\checkbox\\src\\useCheckbox.ts","D:\\FYP\\Projects\\App_Projects\\React Native Expo Cli Projects\\gharbar_app\\node_modules\\@react-aria\\checkbox\\dist\\packages\\@react-aria\\checkbox\\src\\utils.ts","D:\\FYP\\Projects\\App_Projects\\React Native Expo Cli Projects\\gharbar_app\\node_modules\\@react-aria\\checkbox\\dist\\packages\\@react-aria\\checkbox\\src\\useCheckboxGroup.ts","D:\\FYP\\Projects\\App_Projects\\React Native Expo Cli Projects\\gharbar_app\\node_modules\\@react-aria\\checkbox\\dist\\packages\\@react-aria\\checkbox\\src\\useCheckboxGroupItem.ts"],"sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {AriaCheckboxProps} from '@react-types/checkbox';\nimport {InputHTMLAttributes, RefObject, useEffect} from 'react';\nimport {ToggleState} from '@react-stately/toggle';\nimport {useToggle} from '@react-aria/toggle';\n\nexport interface CheckboxAria {\n  /** Props for the input element. */\n  inputProps: InputHTMLAttributes<HTMLInputElement>,\n  /** Whether the checkbox is selected. */\n  isSelected: boolean,\n  /** Whether the checkbox is in a pressed state. */\n  isPressed: boolean,\n  /** Whether the checkbox is disabled. */\n  isDisabled: boolean,\n  /** Whether the checkbox is read only. */\n  isReadOnly: boolean\n}\n\n/**\n * Provides the behavior and accessibility implementation for a checkbox component.\n * Checkboxes allow users to select multiple items from a list of individual items, or\n * to mark one individual item as selected.\n * @param props - Props for the checkbox.\n * @param state - State for the checkbox, as returned by `useToggleState`.\n * @param inputRef - A ref for the HTML input element.\n */\nexport function useCheckbox(props: AriaCheckboxProps, state: ToggleState, inputRef: RefObject<HTMLInputElement>): CheckboxAria {\n  let {inputProps, isSelected, isPressed, isDisabled, isReadOnly} = useToggle(props, state, inputRef);\n\n  let {isIndeterminate} = props;\n  useEffect(() => {\n    // indeterminate is a property, but it can only be set via javascript\n    // https://css-tricks.com/indeterminate-checkboxes/\n    if (inputRef.current) {\n      inputRef.current.indeterminate = isIndeterminate;\n    }\n  });\n\n  return {\n    inputProps: {\n      ...inputProps,\n      checked: isSelected\n    },\n    isSelected,\n    isPressed,\n    isDisabled,\n    isReadOnly\n  };\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {CheckboxGroupState} from '@react-stately/checkbox';\n\nexport const checkboxGroupNames = new WeakMap<CheckboxGroupState, string>();\nexport const checkboxGroupDescriptionIds = new WeakMap<CheckboxGroupState, string>();\nexport const checkboxGroupErrorMessageIds = new WeakMap<CheckboxGroupState, string>();\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {AriaCheckboxGroupProps} from '@react-types/checkbox';\nimport {checkboxGroupDescriptionIds, checkboxGroupErrorMessageIds, checkboxGroupNames} from './utils';\nimport {CheckboxGroupState} from '@react-stately/checkbox';\nimport {DOMAttributes} from '@react-types/shared';\nimport {filterDOMProps, mergeProps} from '@react-aria/utils';\nimport {useField} from '@react-aria/label';\n\nexport interface CheckboxGroupAria {\n  /** Props for the checkbox group wrapper element. */\n  groupProps: DOMAttributes,\n  /** Props for the checkbox group's visible label (if any). */\n  labelProps: DOMAttributes,\n  /** Props for the checkbox group description element, if any. */\n  descriptionProps: DOMAttributes,\n  /** Props for the checkbox group error message element, if any. */\n  errorMessageProps: DOMAttributes\n}\n\n/**\n * Provides the behavior and accessibility implementation for a checkbox group component.\n * Checkbox groups allow users to select multiple items from a list of options.\n * @param props - Props for the checkbox group.\n * @param state - State for the checkbox group, as returned by `useCheckboxGroupState`.\n */\nexport function useCheckboxGroup(props: AriaCheckboxGroupProps, state: CheckboxGroupState): CheckboxGroupAria {\n  let {isDisabled, name} = props;\n\n  let {labelProps, fieldProps, descriptionProps, errorMessageProps} = useField({\n    ...props,\n    // Checkbox group is not an HTML input element so it\n    // shouldn't be labeled by a <label> element.\n    labelElementType: 'span'\n  });\n  checkboxGroupDescriptionIds.set(state, descriptionProps.id);\n  checkboxGroupErrorMessageIds.set(state, errorMessageProps.id);\n\n  let domProps = filterDOMProps(props, {labelable: true});\n\n  // Pass name prop from group to all items by attaching to the state.\n  checkboxGroupNames.set(state, name);\n\n  return {\n    groupProps: mergeProps(domProps, {\n      role: 'group',\n      'aria-disabled': isDisabled || undefined,\n      ...fieldProps\n    }),\n    labelProps,\n    descriptionProps,\n    errorMessageProps\n  };\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {AriaCheckboxGroupItemProps} from '@react-types/checkbox';\nimport {CheckboxAria, useCheckbox} from './useCheckbox';\nimport {checkboxGroupDescriptionIds, checkboxGroupErrorMessageIds, checkboxGroupNames} from './utils';\nimport {CheckboxGroupState} from '@react-stately/checkbox';\nimport {RefObject} from 'react';\nimport {useToggleState} from '@react-stately/toggle';\n\n/**\n * Provides the behavior and accessibility implementation for a checkbox component contained within a checkbox group.\n * Checkbox groups allow users to select multiple items from a list of options.\n * @param props - Props for the checkbox.\n * @param state - State for the checkbox, as returned by `useCheckboxGroupState`.\n * @param inputRef - A ref for the HTML input element.\n */\nexport function useCheckboxGroupItem(props: AriaCheckboxGroupItemProps, state: CheckboxGroupState, inputRef: RefObject<HTMLInputElement>): CheckboxAria {\n  const toggleState = useToggleState({\n    isReadOnly: props.isReadOnly || state.isReadOnly,\n    isSelected: state.isSelected(props.value),\n    onChange(isSelected) {\n      if (isSelected) {\n        state.addValue(props.value);\n      } else {\n        state.removeValue(props.value);\n      }\n\n      if (props.onChange) {\n        props.onChange(isSelected);\n      }\n    }\n  });\n\n  let res = useCheckbox({\n    ...props,\n    isReadOnly: props.isReadOnly || state.isReadOnly,\n    isDisabled: props.isDisabled || state.isDisabled,\n    name: props.name || checkboxGroupNames.get(state)\n  }, toggleState, inputRef);\n\n  return {\n    ...res,\n    inputProps: {\n      ...res.inputProps,\n      'aria-describedby': [\n        state.validationState === 'invalid' ? checkboxGroupErrorMessageIds.get(state) : null,\n        checkboxGroupDescriptionIds.get(state)\n      ].filter(Boolean).join(' ') || undefined\n    }\n  };\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}